(defvar music_reveal false)
(defvar music_popup_open false)

(defpoll song-info :interval "1s" "scripts/music --info")

(defwidget music_bar []
  (eventbox
    :onhover "${EWW_CMD} update music_reveal=true"
    :onhoverlost "${EWW_CMD} update music_reveal=false"
    :onclick "${EWW_CONFIG_DIR}/scripts/toggle_popup music"
    (box
      :orientation "h"
      :space-evenly false
      :spacing "10"
      (box
        :space-evenly false
        :spacing "10"
        (provider_icon :provider {song-info.provider})
        (label :text {song-info.title})
      )
      (revealer
        :transition "slideleft"
        :reveal music_reveal
        :duration "350ms"
        (label :text " - ${song-info.artist}")
      )
    )
  )
)

(defwidget provider_icon [provider]
  (label
    :style "color: ${provider == 'spotify' ? '#1db954' : '#f7768e'};"
    :text {provider == "spotify" ? "" : "󰉌"}
  )
)

(defwidget music_popup [width height]
  (box
    :class "music-popup"
    :orientation "h"
    :space-evenly false
    (overlay
      (box
        :class "cover"
        :width width
        :style "background-image: url('${song-info.cover}');"
      )
      (box
        :class "provider"
        :orientation "h"
        :halign "end"
        :valign "start"
        (provider_icon :provider {song-info.provider})
      )
      (box
        :class "info"
        :orientation "v"
        :halign "start"
        :valign "center"
        :space-evenly false
        :spacing "10"
        (label :halign "start" :limit-width 30 :text {song-info.title})
        (label :halign "start" :limit-width 30 :text {song-info.artist})
      )
      (box
        :class "progress"
        :orientation "v"
        :halign "center"
        :valign "end"
        (scale
          :min 0
          :max {round(song-info.length.secs, 0)}
          :value {round(song-info.time.secs, 0)}
        )
        (label :halign "start" :text "${song-info.time.display} / ${song-info.length.display}")
      )
    )
  )
)

;;; Music information (usable as display in sidebar)
(defwidget music_info [width height]
  (box
    :class "info-panel music-info"
    :orientation "h"
    :space-evenly false
    :width width
    :height height
    (box
      :class "cover"
      :width {height * 0.9}
      :height {height * 0.9}
      :style "background-image: url('${song-info.cover}'); margin: ${height * 0.05};"
    )
    (box
      :class "info"
      :orientation "v"
      :halign "end"
      :valign "center"
      :space-evenly false
      :spacing "10"
      (label :halign "start" :limit-width 20 :text {song-info.title})
      (label :halign "start" :limit-width 20 :text {song-info.artist})
    )
  )
)

